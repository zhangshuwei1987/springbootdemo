public class com.javaLearn.JvmTest.Test {
  public com.javaLearn.JvmTest.Test();
    Code:
       0: aload_0                           //从本地变量表中加载索引为0的变量的值，也即this的引用，压入栈
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V //执行构造函数，完成对象初始化
       4: return
    LineNumberTable:
      line 3: 0
    LocalVariableTable:
      Start  Length  Slot  Name   Signature
          0       5     0  this   Lcom/javaLearn/JvmTest/Test;

  public java.lang.String getResult(com.javaLearn.JvmTest.TestBean);
    Code:
       0: aload_1                           //从本地变量表中加载索引为1的变量的值，也即this的引用，压入栈
       1: invokevirtual #2                  // Method com/javaLearn/JvmTest/TestBean.getCol3:()Ljava/lang/String; //
       4: areturn
    LineNumberTable:
      line 6: 0
    LocalVariableTable:
      Start  Length  Slot  Name   Signature
          0       5     0  this   Lcom/javaLearn/JvmTest/Test;
          0       5     1    tb   Lcom/javaLearn/JvmTest/TestBean;

  public static void main(java.lang.String[]);
    Code:
       0: new           #3                  // class com/javaLearn/JvmTest/TestBean 创建一个对象，并将其引用值压入栈顶
       3: dup                               // 复制栈顶数值并将复制值压入栈顶
       4: ldc           #4                  // String col1 将int, float或String型常量值从常量池中推送至栈顶
       6: ldc           #5                  // String col2 将int, float或String型常量值从常量池中推送至栈顶
       8: invokespecial #6                  // Method com/javaLearn/JvmTest/TestBean."<init>":(Ljava/lang/String;Ljava/lang/String;)V 调用超类构造方法，实例初始化方法，私有方法
      11: astore_1                          // 将栈顶引用型数值存入第二个本地变量
      12: new           #7                  // class com/javaLearn/JvmTest/Test 创建一个对象，并将其引用值压入栈顶
      15: dup                               // 复制栈顶数值并将复制值压入栈顶
      16: invokespecial #8                  // Method "<init>":()V 调用超类构造方法，实例初始化方法，私有方法
      19: aload_1                           // 将第二个引用类型本地变量推送至栈顶
      20: invokevirtual #9                  // Method getResult:(Lcom/javaLearn/JvmTest/TestBean;)Ljava/lang/String; 调用实例方法
      23: pop                               // 将栈顶数值弹出 (数值不能是long或double类型的)
      24: return                            // 从当前方法返回void
    LineNumberTable:
      line 10: 0
      line 11: 12
      line 12: 24
    //局部变量表
    LocalVariableTable:
      Start  Length  Slot  Name   Signature
          0      25     0  args   [Ljava/lang/String;
         12      13     1    tb   Lcom/javaLearn/JvmTest/TestBean;
}
